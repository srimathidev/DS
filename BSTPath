/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> res = new ArrayList<String>();
        if(root==null) return null;
        path(root,"",res);
        return res;
    }
    public void path(TreeNode root, String link, List<String> res){
        //if root is null, return root
        if(root.left == null && root.right==null){
            res.add(link+root.val);
                
        }
        if(root.left!=null){
            path(root.left, link+root.val+"->", res);
        }
        if(root.right!=null){
            path(root.right,link+root.val+"->",res);
        }
    }
}
