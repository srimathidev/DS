/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> findLeaves(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        if(root == null) return res;
        dfs(root,res);
        return res;
    }
    
    public int dfs(TreeNode root, List<List<Integer>> res){
        if(root == null){
            return -1;
        }
        
        int level = Math.max(dfs(root.left,res),dfs(root.right,res)) + 1;
        
        if(res.size() <= level){
            res.add(new ArrayList<Integer>());
        }
        res.get(level).add(root.val);
        return level;
    }
}
