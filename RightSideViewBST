//BFS solution
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> rightSide = new  ArrayList<Integer>();
        preorder(root,0,rightSide);
        return rightSide;
    }
    
    public void preorder(TreeNode root, int level, List<Integer> rightSide){
        if(root == null) return;
        
        //boundary check
        if(level == rightSide.size()){
            rightSide.add(root.val);
        }
        
        preorder(root.right, level+1, rightSide);
        preorder(root.left, level+1, rightSide);

    }
}
