//recursion DFS
class Solution {
    public int numIslands(char[][] grid) {
        int count = 0;
        for(int i = 0; i<grid.length;i++)
        {
            for(int j=0; j<grid[i].length;j++)
            {
                if(grid[i][j] == '1'){
                    count++;
                    callDFS(i,j,grid);
                }
            }
        }
        return count;
    }
    
    public void callDFS(int i, int j, char[][] grid){
    
        //base case and boundary check
        if(i<0 || i>=grid.length || j<0 || j>=grid[i].length || grid[i][j] !='1') return;
        
        //recursion logic and backtracking
        grid[i][j] = '0';
        callDFS(i+1,j,grid);
        callDFS(i-1,j,grid);
        callDFS(i,j+1,grid);
        callDFS(i,j-1,grid);
        
    }
}
