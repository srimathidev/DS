class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        Map<Integer, Integer> hm = new HashMap<>();
        PriorityQueue<Map.Entry<Integer,Integer>> pq = new PriorityQueue<>((a,b) -> b.getValue() - a.getValue());
        
        for(int i=0;i<nums.length;i++){
            if(hm.containsKey(nums[i])){
                hm.put(nums[i], hm.get(nums[i]) + 1);
            }
            else{
                hm.put(nums[i], 1);
            }
        }
        
       for(Map.Entry e: hm.entrySet()){
           pq.add(e);
       }
        
        int[] res = new int[k];
        
        for(int j=0; j<k ; j++){
            res[j] = pq.poll().getKey();
        }
        return res;
    }
}
