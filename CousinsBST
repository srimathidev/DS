/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    TreeNode xParent = null;
    TreeNode yParent = null;
    int xHeight = 0;
    int yHeight = 0;
    public boolean isCousins(TreeNode root, int x, int y) {
        helper(root, x, y, 0, null);
        return xHeight == yHeight && xParent != yParent ? true : false;
    }
    public void helper(TreeNode root, int x, int y, int height, TreeNode parent){
        //base case
        if(root==null) return;
        if(root.val == x){
            xParent = parent;
            xHeight = height;
        }
        if(root.val == y){
            yParent = parent;
            yHeight = height;
        }
        helper(root.left,x,y,height+1,root);
        helper(root.right,x,y,height+1,root);
    }
}
