//recursion and backtracking
class Solution {
    
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        comb(1,k,n,new LinkedList(),result);
        return result;
    }
    public void comb(int first, int k, int n, LinkedList list, List<List<Integer>> result){
        if(k < 0 || n < 0)
        {
            return;
        }
        if(k == 0 && n == 0)
        {
            result.add(new ArrayList(list));
            return;
        }
        for(int i=first; i<=9;i++){
            list.add(i);
            comb(i+1,k-1,n-i,list,result);
            list.removeLast(); //backtracking
        }
    }
}
